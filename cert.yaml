---
  - hosts: all
    become: true
    tasks:
      - name: Install CA certificates
        yum:
          name: ca-certificates
          state: present

      - name: Update the CA trust store
        command: update-ca-trust
        when: ansible_facts['os_family'] == "RedHat"

      - name: Copy custom CA certificate
        copy:
          src: /home/ansadmin/NetSquare/CA1.crt
          dest: /etc/pki/ca-trust/source/anchors/CA1.crt
          mode: '0644'

      - name: Update CA store with custom CA
        command: update-ca-trust
      
      - name: Check if the custom CA certificate has expired on RedHat-based systems
        command: "openssl x509 -noout -in /etc/pki/ca-trust/source/anchors/CA1.crt -checkend 0"
        register: cert_check_redhat
        when: ansible_facts['os_family'] == "RedHat"

      - name: Fail if the custom CA certificate has expired on RedHat-based systems
        fail:
          msg: "The custom CA certificate has expired!"
        when: cert_check_redhat.rc != 0

      - name: Install Python3 and pip (RedHat-based)
        yum:
          name:
            - python3
            - python3-pip
            - python3-virtualenv
          state: present
        when: ansible_facts['os_family'] == "RedHat"

      - name: Create /opt/example directory
        file:
          path: /opt/example
          state: directory
          mode: '0755'

      - name: Copy Flask application wheel file to the target system
        copy:
          src: /home/ansadmin/NetSquare/Example-1.1.2-py3-none-any.whl
          dest: /opt/example/Example-1.1.2-py3-none-any.whl
          mode: '0644'

      - name: Create a Python virtual environment
        command: python3 -m venv /opt/example/venv
        args:
          creates: /opt/example

      - name: Install Flask application from the provided wheel file
        pip:
          virtualenv: /opt/example
          name: /opt/example/Example-1.1.2-py3-none-any.whl

      - name: Create systemd service file for Flask application
        copy:
          dest: /etc/systemd/system/flask-app.service
          content: |
            [Unit]
            Description=Flask Application
            After=network.target

            [Service]
            User=root
            WorkingDirectory=/opt/example
            Environment="PATH=/opt/example/venv/bin"
            Environment="FLASK_APP=example:create_app()"
            ExecStart=/opt/example/venv/bin/gunicorn -b 0.0.0.0:5000 example:create_app()
            Restart=always

            [Install]
            WantedBy=multi-user.target
      - name: Reload systemd
        command: systemctl daemon-reload

      - name: Enable and start Flask application
        systemd:
          name: flask-app
          state: started
          enabled: yes
